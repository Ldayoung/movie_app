{"version":3,"sources":["components/Movie.js","routes/Home.js","routes/About.js","routes/Detail.js","components/Navigation.js","App.js","index.js"],"names":["Movie","id","title","year","summary","poster","genres","to","pathname","state","className","src","alt","map","genre","index","key","slice","Home","isLoading","getMovies","a","axios","get","movies","data","setState","this","movie","medium_cover_image","React","Component","About","Detail","props","location","history","undefined","push","Navigation","App","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+TA8CeA,MAxCf,YAA8D,IAA7CC,EAA4C,EAA5CA,GAAIC,EAAwC,EAAxCA,MAAOC,EAAiC,EAAjCA,KAAMC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,OACjD,OACE,kBAAC,IAAD,CACEC,GAAI,CACFC,SAAS,UAAD,OAAYP,GACpBQ,MAAO,CACLP,QACAC,OACAC,UACAC,SACAC,YAGJ,yBAAKI,UAAU,SACb,yBAAKC,IAAKN,EAAQO,IAAKV,EAAOA,MAAOA,IACrC,yBAAKQ,UAAU,eACb,wBAAIA,UAAU,gBAAgBR,GAC9B,wBAAIQ,UAAU,eAAeP,GAC7B,wBAAIO,UAAU,iBACXJ,EAAOO,KAAI,SAACC,EAAOC,GAAR,OACV,wBAAIC,IAAKD,EAAOL,UAAU,iBAAiBI,OAG/C,uBAAGJ,UAAU,kBAAkBN,EAAQa,MAAM,EAAG,KAAhD,WC8BKC,G,kNArDbT,MAAQ,CACNU,WAAW,G,EAGbC,U,sBAAY,8BAAAC,EAAA,sEAKAC,IAAMC,IAAI,4DALV,gBAGEC,EAHF,EAERC,KACEA,KAAQD,OAIZ,EAAKE,SAAS,CAAEF,SAAQL,WAAY,IAP1B,2C,kEAYVQ,KAAKP,c,+BAOI,IAAD,EAGwBO,KAAKlB,MAA3BU,EAHF,EAGEA,UAAWK,EAHb,EAGaA,OACnB,OACA,6BAASd,UAAU,aAEfS,EAEE,yBAAKT,UAAU,UACb,0BAAMA,UAAU,gBAAhB,eAGF,yBAAKA,UAAU,UACZc,EAAOX,KAAI,SAAAe,GAAK,OACf,kBAAC,EAAD,CACEZ,IAAKY,EAAM3B,GACXA,GAAI2B,EAAM3B,GACVE,KAAMyB,EAAMzB,KACZD,MAAO0B,EAAM1B,MACbE,QAASwB,EAAMxB,QACfC,OAAQuB,EAAMC,mBACdvB,OAAQsB,EAAMtB,kB,GA9CbwB,IAAMC,YCCVC,MAJf,WACI,OAAO,iDCkBIC,E,kLAlBQ,IAAD,EACYN,KAAKO,MAA3BC,EADU,EACVA,SAAUC,EADA,EACAA,aACKC,IAAnBF,EAAS1B,OACX2B,EAAQE,KAAK,O,+BAKP,IACAH,EAAaR,KAAKO,MAAlBC,SACR,OAAIA,EAAS1B,MACJ,8BAAO0B,EAAS1B,MAAMP,OAEtB,S,GAdQ4B,IAAMC,WCsBZQ,MArBf,WACE,OACI,6BACI,kBAAC,IAAD,CAAMhC,GAAG,KAAT,QACA,kBAAC,IAAD,CAAMA,GAAG,UAAT,WCgBKiC,MAdf,WACE,OACA,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAO,EAAMC,UAAWzB,IACxC,kBAAC,IAAD,CAAOuB,KAAK,SAASE,UAAWX,IAChC,kBAAC,IAAD,CAAOS,KAAK,aAAaE,UAAWV,MCXxCW,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.0eb85290.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Movie.css\";\r\n\r\n// movie api에는 state가 필요 없으므로 class가 아닌 function component 사용.\r\nfunction Movie({ id, title, year, summary, poster, genres }) {\r\n  return (\r\n    <Link\r\n      to={{\r\n        pathname: `/movie/${id}`,\r\n        state: {\r\n          title,\r\n          year,\r\n          summary,\r\n          poster,\r\n          genres\r\n        }\r\n      }}>\r\n      <div className=\"movie\">\r\n        <img src={poster} alt={title} title={title} />\r\n        <div className=\"movie__data\">\r\n          <h3 className=\"movie__title\">{title}</h3>\r\n          <h5 className=\"movie__year\">{year}</h5>\r\n          <ul className=\"movie__genres\">\r\n            {genres.map((genre, index) => (\r\n              <li key={index} className=\"genres__genre\">{genre}</li>\r\n            ))}\r\n          </ul>\r\n          <p className=\"movie__summury\">{summary.slice(0, 180)}...</p>\r\n          {/* 일정 글자 이상 자르고 ...으로 표현 */}\r\n          </div>\r\n      </div>\r\n    </Link>\r\n    );\r\n}\r\n\r\nMovie.propTypes = {\r\n    id: PropTypes.number.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    year: PropTypes.number.isRequired,\r\n    summary: PropTypes.string.isRequired,\r\n    poster: PropTypes.string.isRequired,\r\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired\r\n}\r\n\r\nexport default Movie;","import React from 'react';\r\nimport axios from 'axios';\r\nimport Movie from '../components/Movie.js';\r\nimport \"./Home.css\";\r\n\r\nclass Home extends React.Component {\r\n  state = {\r\n    isLoading: true\r\n  };\r\n\r\n  getMovies = async() => {\r\n    const {\r\n      data: {\r\n        data: { movies }\r\n      }\r\n    } = await axios.get(\"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\");\r\n    //?sort_by=rating : 별점 순으로 정렬\r\n    this.setState({ movies, isLoading : false })\r\n    // ES5: this.setState({ movies:movies })\r\n    // this.setState({ set state의 movies: axios의 movies })\r\n  }\r\n  componentDidMount(){\r\n    this.getMovies();\r\n  }\r\n  // [ Fetching Movies from API ]\r\n  // axios.get은 처리하는데 조금 시간이 걸린다. 그래서,\r\n  // async : 비동기 : '이걸 기다려야 해!'\r\n  // await : '뭘 기다려야해?' (axios!)\r\n  \r\n  render () {\r\n\r\n      \r\n      const { isLoading, movies } = this.state;\r\n      return (\r\n      <section className=\"container\">\r\n      {/* className : JSX = class : HTML */}\r\n        { isLoading\r\n          ? (\r\n            <div className=\"loader\">\r\n              <span className=\"loader__text\">Loading...</span>\r\n            </div>\r\n          ) : (\r\n            <div className=\"movies\">\r\n              {movies.map(movie => (\r\n                <Movie\r\n                  key={movie.id}\r\n                  id={movie.id} \r\n                  year={movie.year}\r\n                  title={movie.title}\r\n                  summary={movie.summary} \r\n                  poster={movie.medium_cover_image}\r\n                  genres={movie.genres}\r\n                />\r\n              ))}\r\n            </div>\r\n          )}\r\n    </section>);\r\n  }\r\n}\r\nexport default Home;","import React from \"react\";\r\n\r\nfunction About() {\r\n    return <span>I love movies.</span>;\r\n}\r\n\r\nexport default About;","import React from 'react';\r\n\r\nclass Detail extends React.Component {\r\n  componentDidMount() {\r\n    const { location, history } = this.props;\r\n    if (location.state === undefined) {\r\n      history.push(\"/\");\r\n      // Redirect :  Web Container로 명령이 들어오면, 웹 브라우저에게 다른 페이지로 이동하라고 명령을 내린다 -> 웹 브라우저는 URL을 지시된 주소로 바꾸고 해당 주소로 이동한다. -> 다른 웹 컨테이너에 있는 주소로 이동하며 새로운 페이지에서는 Request와 Response객체가 새롭게 생성된다.\r\n      \r\n    }\r\n  }\r\n  render() {\r\n    const { location } = this.props;\r\n    if (location.state) {\r\n      return <span>{location.state.title}</span>;\r\n    } else {\r\n      return null;\r\n    }\r\n    \r\n  }\r\n}\r\nexport default Detail;","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Navigation(){\r\n  return(\r\n      <div>\r\n          <Link to=\"/\">Home</Link>\r\n          <Link to=\"/about\">About</Link>\r\n          {/* <Link \r\n              to={{\r\n                  pathname: \"/about\",\r\n                  state: {\r\n                      fromNavigation: true\r\n                      // route로 정보를 보냈다.\r\n                  }\r\n              }}\r\n          >\r\n              About\r\n              </Link> */}\r\n          {/* Link to = a href / Router 밖에서 쓸 수 없음 */}\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\nimport { HashRouter, Route } from \"react-router-dom\";\n// react router : router는 URL을 가져다가 확인하고, 우리가 router에 무엇을 명령했느냐에 따라 불러올 컴포넌트를 결정한다.\n// /about -> About.js   /home -> home.js\nimport Home from \"./routes/Home\";\nimport About from \"./routes/About\";\nimport Detail from './routes/Detail'\nimport Navigation from \"./components/Navigation\";\n\nfunction App(){\n  return (\n  <HashRouter>\n    <Navigation />\n    <Route path=\"/\" exact={true} component={Home} />\n    <Route path=\"/about\" component={About} />\n    <Route path=\"/movie/:id\" component={Detail} />\n  </HashRouter>\n  // exact: 이거 아니면 rendering하지 않는다.\n  // path와 component의 이름이 같지 않아도 된다. ex) <Router path=\"/about\" component={potato} />  \n  // \"/movie/:id\" : 변수처리\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}